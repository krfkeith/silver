
This extension add floating point numbers to the expression language.

It defines type expressions (TypeExpr), type representations
(TypeRep),  floating point literals (FloatLit_t), and overloads the
arithmetic operators.

This extension is not, however, a "composable" extension.  It may not
work when combined with other extensions that add attributes to host
language nonterminal symbols.

The reason for this is that productions with host language
nonterminals on their left hand sides do not forward to constructs in
the host language.  For example, the floating point literal production

   abstract production floatConstant
   fc::Expr ::= f::FloatLit_t

is a host language expression (Expr) but it doesn't forward to
something in the host language and will thus not have a definition for
any new attributes added to host language nonterminals by other
extensions. 

This extension works with the ctrans extension since it adds
definitions for the c_trans, lifted_Dcls, and lifted_Expr attributes.
To work with other extensions that add attributes to the host language
nonterminals, those new attribute must be added.  This is what breaks
the compositionality of this float extension.

This extension is "modular" in the sense that it the specification is
self-contained in its own grammar module.
