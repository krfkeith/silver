terminals [('demo:Bar_t', [lexer_class['demo:TERMINAL']], /.../), ('demo:Foo_t', [lexer_class['demo:TERMINAL']], /.../), ('demo:I_t', [ignore], /bar/)]
nonterminals ['demo:Root', 'demo:Foo', 'demo:Bar']
rules [('demo:Root', [('demo','demo:root1',[],[])]), ('demo:Root', [('demo','demo:root2',['demo:Foo','demo:Root'],[])]), ('demo:Root', [('demo','demo:root3',['demo:Bar','demo:Root'],[])]), ('demo:Foo', [('demo','demo:foo',['demo:Foo_t'],[])]), ('demo:Bar', [('demo','demo:bar',['demo:Bar_t'],[])])]
impliedName 'demo'
declaredName 'demo'
moduleNames ['core']
defs [type('demo:Bar_t', term('demo:Bar_t')), type('demo:Foo_t', term('demo:Foo_t')), type('demo:I_t', term('demo:I_t')), type('demo:Root', nt('demo:Root')), type('demo:Foo', nt('demo:Foo')), type('demo:Bar', nt('demo:Bar')), value('demo:pfoo1', fun([string], nt('demo:Root'))), value('demo:pfoo2', fun([string], nt('demo:Root'))), value('demo:main', fun([string, io], io)), value('demo:root1', prod([], nt('demo:Root'))), value('demo:root_str', prod([string], nt('demo:Root'))), value('demo:root2', prod([nt('demo:Foo'), nt('demo:Root')], nt('demo:Root'))), value('demo:root3', prod([nt('demo:Bar'), nt('demo:Root')], nt('demo:Root'))), value('demo:foo', prod([nt('demo:Foo_t')], nt('demo:Foo'))), value('demo:bar', prod([nt('demo:Bar_t')], nt('demo:Bar'))), name('pfoo1', 'demo:pfoo1'), name('pfoo2', 'demo:pfoo2'), name('TERMINAL', 'demo:TERMINAL'), name('Bar_t', 'demo:Bar_t'), name('Foo_t', 'demo:Foo_t'), name('I_t', 'demo:I_t'), name('Root', 'demo:Root'), name('Foo', 'demo:Foo'), name('Bar', 'demo:Bar'), name('c', 'demo:c'), name('auto', 'demo:auto'), name('pp', 'demo:pp'), name('main', 'demo:main'), name('root1', 'demo:root1'), name('root_str', 'demo:root_str'), name('root2', 'demo:root2'), name('root3', 'demo:root3'), name('foo', 'demo:foo'), name('bar', 'demo:bar'), attr('demo:c', collection(++,string)), attr('demo:auto', string), attr('demo:pp', string), fun(signature('demo:main', [element('args', 'args', 'args', string), element('io', 'io', 'io', io)], element('__return', '__return', '__return', io))), prod(signature('demo:root1', [], element('top', 'top', 'top', nt('demo:Root')))), prod(signature('demo:root_str', [element('s', 's', 's', string)], element('top', 'top', 'top', nt('demo:Root')))), prod(signature('demo:root2', [element('f', 'f', 'f', nt('demo:Foo')), element('r', 'r', 'r', nt('demo:Root'))], element('top', 'top', 'top', nt('demo:Root')))), prod(signature('demo:root3', [element('b', 'b', 'b', nt('demo:Bar')), element('r', 'r', 'r', nt('demo:Root'))], element('top', 'top', 'top', nt('demo:Root')))), prod(signature('demo:foo', [element('f', 'f', 'f', nt('demo:Foo_t'))], element('top', 'top', 'top', nt('demo:Foo')))), prod(signature('demo:bar', [element('b', 'b', 'b', nt('demo:Bar_t'))], element('top', 'top', 'top', nt('demo:Bar')))), syn('demo:pp'), inh('demo:c'), inh('demo:auto'), @('lexeme', 'demo:Bar_t'), @('line', 'demo:Bar_t'), @('column', 'demo:Bar_t'), @('lexeme', 'demo:Foo_t'), @('line', 'demo:Foo_t'), @('column', 'demo:Foo_t'), @('lexeme', 'demo:I_t'), @('line', 'demo:I_t'), @('column', 'demo:I_t'), @('core:patProdName', 'demo:Root'), @('core:patChildList', 'demo:Root'), @('core:patProdName', 'demo:Foo'), @('core:patChildList', 'demo:Foo'), @('core:patProdName', 'demo:Bar'), @('core:patChildList', 'demo:Bar'), @('demo:c', 'demo:Bar'), @('demo:auto', 'demo:Root'), @('demo:pp', 'demo:Root'), @('demo:pp', 'demo:Foo'), @('demo:pp', 'demo:Bar'), lexer_class('demo:TERMINAL')]
exportedDefs [type('demo:Bar_t', term('demo:Bar_t')), type('demo:Foo_t', term('demo:Foo_t')), type('demo:I_t', term('demo:I_t')), type('demo:Root', nt('demo:Root')), type('demo:Foo', nt('demo:Foo')), type('demo:Bar', nt('demo:Bar')), value('demo:pfoo1', fun([string], nt('demo:Root'))), value('demo:pfoo2', fun([string], nt('demo:Root'))), value('demo:main', fun([string, io], io)), value('demo:root1', prod([], nt('demo:Root'))), value('demo:root_str', prod([string], nt('demo:Root'))), value('demo:root2', prod([nt('demo:Foo'), nt('demo:Root')], nt('demo:Root'))), value('demo:root3', prod([nt('demo:Bar'), nt('demo:Root')], nt('demo:Root'))), value('demo:foo', prod([nt('demo:Foo_t')], nt('demo:Foo'))), value('demo:bar', prod([nt('demo:Bar_t')], nt('demo:Bar'))), name('pfoo1', 'demo:pfoo1'), name('pfoo2', 'demo:pfoo2'), name('TERMINAL', 'demo:TERMINAL'), name('Bar_t', 'demo:Bar_t'), name('Foo_t', 'demo:Foo_t'), name('I_t', 'demo:I_t'), name('Root', 'demo:Root'), name('Foo', 'demo:Foo'), name('Bar', 'demo:Bar'), name('c', 'demo:c'), name('auto', 'demo:auto'), name('pp', 'demo:pp'), name('main', 'demo:main'), name('root1', 'demo:root1'), name('root_str', 'demo:root_str'), name('root2', 'demo:root2'), name('root3', 'demo:root3'), name('foo', 'demo:foo'), name('bar', 'demo:bar'), attr('demo:c', collection(++,string)), attr('demo:auto', string), attr('demo:pp', string), fun(signature('demo:main', [element('args', 'args', 'args', string), element('io', 'io', 'io', io)], element('__return', '__return', '__return', io))), prod(signature('demo:root1', [], element('top', 'top', 'top', nt('demo:Root')))), prod(signature('demo:root_str', [element('s', 's', 's', string)], element('top', 'top', 'top', nt('demo:Root')))), prod(signature('demo:root2', [element('f', 'f', 'f', nt('demo:Foo')), element('r', 'r', 'r', nt('demo:Root'))], element('top', 'top', 'top', nt('demo:Root')))), prod(signature('demo:root3', [element('b', 'b', 'b', nt('demo:Bar')), element('r', 'r', 'r', nt('demo:Root'))], element('top', 'top', 'top', nt('demo:Root')))), prod(signature('demo:foo', [element('f', 'f', 'f', nt('demo:Foo_t'))], element('top', 'top', 'top', nt('demo:Foo')))), prod(signature('demo:bar', [element('b', 'b', 'b', nt('demo:Bar_t'))], element('top', 'top', 'top', nt('demo:Bar')))), syn('demo:pp'), inh('demo:c'), inh('demo:auto'), @('lexeme', 'demo:Bar_t'), @('line', 'demo:Bar_t'), @('column', 'demo:Bar_t'), @('lexeme', 'demo:Foo_t'), @('line', 'demo:Foo_t'), @('column', 'demo:Foo_t'), @('lexeme', 'demo:I_t'), @('line', 'demo:I_t'), @('column', 'demo:I_t'), @('core:patProdName', 'demo:Root'), @('core:patChildList', 'demo:Root'), @('core:patProdName', 'demo:Foo'), @('core:patChildList', 'demo:Foo'), @('core:patProdName', 'demo:Bar'), @('core:patChildList', 'demo:Bar'), @('demo:c', 'demo:Bar'), @('demo:auto', 'demo:Root'), @('demo:pp', 'demo:Root'), @('demo:pp', 'demo:Foo'), @('demo:pp', 'demo:Bar'), lexer_class('demo:TERMINAL')]