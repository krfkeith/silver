/*
 * Variables used:
 *   PKG_NAME
 *   LANG_NAME
 */
package @PKG_NAME@.imp.actions;

import ide.NIdeEnv;

import org.eclipse.core.resources.IProject;
import org.eclipse.jdt.core.IJavaProject;
import org.eclipse.jface.action.IAction;
import org.eclipse.jface.viewers.ISelection;
import org.eclipse.jface.viewers.IStructuredSelection;
import org.eclipse.ui.IWorkbenchWindow;
import org.eclipse.ui.IWorkbenchWindowActionDelegate;

import @PKG_NAME@.@LANG_NAME@Service;
import edu.umn.cs.melt.ide.silver.property.ProjectProperties;


public class Export@LANG_NAME@ implements IWorkbenchWindowActionDelegate {
	private IProject fProject;

	public Export@LANG_NAME@() {
	}

	public void dispose() {
	}

	public void init(IWorkbenchWindow window) {
	}

	public void run(IAction action) {
		@LANG_NAME@Service service = @LANG_NAME@Service.getInstance();
		
		NIdeEnv env = service.getEnvironment(fProject);
		
		ProjectProperties props = service.getProperties(fProject);
		
//		IPath p = fProject.getLocation();
//		System.out.println(fProject.getName());
//		System.out.println(p.toOSString());
//		System.out.println(p.toOSString() + "/" + SILVERBuilder.GEN_FOLDER);
//		
//		try {
//			Location platform = Platform.getInstallLocation();
//			File parent = new File(FileLocator.resolve(platform.getURL()).toURI());
//			System.out.println(parent.getAbsolutePath());
//		} catch (URISyntaxException e) {
//			e.printStackTrace();
//		} catch (IOException e) {
//			e.printStackTrace();
//		}
		
	}

	public void selectionChanged(IAction action, ISelection selection) {
		if (selection instanceof IStructuredSelection) {
			IStructuredSelection ss = (IStructuredSelection) selection;
			Object first = ss.getFirstElement();

			if (first instanceof IProject) {
				fProject = (IProject) first;
			} else if (first instanceof IJavaProject) {
				fProject = ((IJavaProject) first).getProject();
			}
		}
	}
}
